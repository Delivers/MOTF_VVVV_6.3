/**************************
***** Compiler Parameters *****
***************************
@P EffectName: Shader_1212456504
***************************
****  ConstantBuffers  ****
***************************
cbuffer Inputs [Size: 96]
@C    input_1898795993_id34 => input_1898795993
@C    input_1755149533_id35 => input_1755149533
@C    input_291234122_id36 => input_291234122
@C    input_2880991208_id37 => input_2880991208
cbuffer PerDraw [Size: 416]
@C    World_id24 => Transformation.World
@C    WorldInverse_id25 => Transformation.WorldInverse
@C    WorldInverseTranspose_id26 => Transformation.WorldInverseTranspose
@C    WorldView_id27 => Transformation.WorldView
@C    WorldViewInverse_id28 => Transformation.WorldViewInverse
@C    WorldViewProjection_id29 => Transformation.WorldViewProjection
@C    WorldScale_id30 => Transformation.WorldScale
@C    EyeMS_id31 => Transformation.EyeMS
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    SamplerInput_2138948010_id33 => SamplerInput_2138948010 [Stage: Pixel, Slot: (0-0)]
@R    TextureInput_297517705_id32 => TextureInput_297517705 [Stage: Pixel, Slot: (0-0)]
@R    Inputs => Inputs [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    Shader_1212456504 => fc2fa11f148f8d6ca141b22247013f11
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
***************************
*****     Stages      *****
***************************
@G    Vertex => c086ee0ec0a901f843b67538a3776fe6
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 World_id24;               // Offset:    0 Size:    64 [unused]
//   float4x4 WorldInverse_id25;        // Offset:   64 Size:    64 [unused]
//   float4x4 WorldInverseTranspose_id26;// Offset:  128 Size:    64 [unused]
//   float4x4 WorldView_id27;           // Offset:  192 Size:    64 [unused]
//   float4x4 WorldViewInverse_id28;    // Offset:  256 Size:    64 [unused]
//   float4x4 WorldViewProjection_id29; // Offset:  320 Size:    64
//   float3 WorldScale_id30;            // Offset:  384 Size:    12 [unused]
//   float4 EyeMS_id31;                 // Offset:  400 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[24], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
//
// Initial variable locations:
//   v0.x <- __input__.Position_id14.x; v0.y <- __input__.Position_id14.y; v0.z <- __input__.Position_id14.z; v0.w <- __input__.Position_id14.w; 
//   o1.x <- <VSMain return value>.Position_id14.x; o1.y <- <VSMain return value>.Position_id14.y; o1.z <- <VSMain return value>.Position_id14.z; o1.w <- <VSMain return value>.Position_id14.w; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 135 "C:\Projects\MOTF\MOTF_VVVV_6.3\vvvv_gamma_6.3\log\shader_Shader_1212456504_d1d13111328cd6dbae87cc3451b555b5.hlsl"
dp4 o0.x, v0.xyzw, cb0[20].xyzw
dp4 o0.y, v0.xyzw, cb0[21].xyzw
dp4 o0.z, v0.xyzw, cb0[22].xyzw
dp4 o0.w, v0.xyzw, cb0[23].xyzw

#line 140
mov o1.xyzw, v0.xyzw
ret 
// Approximately 6 instruction slots used
@G    Pixel => cfcb177a52429fea15bea5d91af7d1d1
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Inputs
// {
//
//   float4x4 input_1898795993_id34;    // Offset:    0 Size:    64
//   float2 input_1755149533_id35;      // Offset:   64 Size:     8
//   float input_291234122_id36;        // Offset:   72 Size:     4
//   float4 input_2880991208_id37;      // Offset:   80 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SamplerInput_2138948010_id33      sampler      NA          NA             s0      1 
// TextureInput_297517705_id32       texture  float4          2d             t0      1 
// Inputs                            cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.Position_id14.x; v1.y <- __input__.Position_id14.y; v1.z <- __input__.Position_id14.z; v1.w <- __input__.Position_id14.w; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 68 "C:\Projects\MOTF\MOTF_VVVV_6.3\vvvv_gamma_6.3\log\shader_Shader_1212456504_d1d13111328cd6dbae87cc3451b555b5.hlsl"
max r0.x, |v1.x|, |v1.z|
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
min r0.y, |v1.x|, |v1.z|
mul r0.x, r0.x, r0.y
mul r0.y, r0.x, r0.x
mad r0.z, r0.y, l(0.020835), l(-0.085133)
mad r0.z, r0.y, r0.z, l(0.180141)
mad r0.z, r0.y, r0.z, l(-0.330299)
mad r0.y, r0.y, r0.z, l(0.999866)
mul r0.z, r0.y, r0.x
mad r0.z, r0.z, l(-2.000000), l(1.570796)
lt r0.w, |v1.x|, |v1.z|
and r0.z, r0.w, r0.z
mad r0.x, r0.x, r0.y, r0.z
lt r0.y, v1.x, -v1.x
and r0.y, r0.y, l(0xc0490fdb)
add r0.x, r0.y, r0.x
min r0.y, v1.x, v1.z
lt r0.y, r0.y, -r0.y
max r0.z, v1.x, v1.z
ge r0.z, r0.z, -r0.z
and r0.y, r0.z, r0.y
movc r0.x, r0.y, -r0.x, r0.x  // r0.x <- atan2_1845814256

#line 69
mul r0.x, r0.x, l(0.159155)  // r0.x <- result_1745919424

#line 71
frc r0.x, r0.x  // r0.x <- frac_891112767

#line 80
add r0.x, r0.x, l(0.500000)  // r0.x <- result_2473220602

#line 81
frc r0.x, r0.x  // r0.x <- frac_3877918392

#line 86
mul r0.x, r0.x, l(6.283185)  // r0.x <- result_2314784651

#line 87
sincos r0.x, r1.x, r0.x  // r1.x <- cos_2153052292; r0.x <- sin_2407044834

#line 73
dp3 r0.y, v1.xyzx, v1.xyzx
sqrt r0.y, r0.y  // r0.y <- length_2020406738

#line 74
div r0.y, v1.y, r0.y  // r0.y <- result_3794343255

#line 75
mad r0.z, |r0.y|, l(-0.018729), l(0.074261)
mad r0.z, r0.z, |r0.y|, l(-0.212114)
mad r0.z, r0.z, |r0.y|, l(1.570729)
add r0.w, -|r0.y|, l(1.000000)
lt r0.y, r0.y, -r0.y
sqrt r0.w, r0.w
mul r1.y, r0.w, r0.z
mad r1.y, r1.y, l(-2.000000), l(3.141593)
and r0.y, r0.y, r1.y
mad r0.y, r0.z, r0.w, r0.y

#line 76
add r0.y, -r0.y, l(3.141593)  // r0.y <- result_1989824841

#line 83
mad r0.y, -r0.y, l(0.318310), l(1.000000)  // r0.y <- result_3792277587

#line 90
mad r0.y, r0.y, l(3.141593), l(-1.570796)  // r0.y <- result_101928469

#line 91
sincos r2.x, r3.x, r0.y  // r3.x <- cos_3152529648; r2.x <- sin_454066563

#line 92
mul r1.x, r1.x, r3.x  // r1.x <- result_1463666584

#line 95
mul r1.z, r0.x, r3.x  // r1.z <- result_2611827178

#line 98
mov r1.y, r2.x
mov r1.w, l(1.000000)
dp4 r0.z, r1.xyzw, cb0[2].xyzw  // r0.z <- mul_685133710.z
dp4 r0.x, r1.xyzw, cb0[0].xyzw  // r0.x <- mul_685133710.x
dp4 r0.y, r1.xyzw, cb0[1].xyzw  // r0.y <- mul_685133710.y

#line 102
max r0.w, |r0.x|, |r0.z|
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
min r1.x, |r0.x|, |r0.z|
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, r0.w
mad r1.y, r1.x, l(0.020835), l(-0.085133)
mad r1.y, r1.x, r1.y, l(0.180141)
mad r1.y, r1.x, r1.y, l(-0.330299)
mad r1.x, r1.x, r1.y, l(0.999866)
mul r1.y, r0.w, r1.x
mad r1.y, r1.y, l(-2.000000), l(1.570796)
lt r1.z, |r0.x|, |r0.z|
and r1.y, r1.z, r1.y
mad r0.w, r0.w, r1.x, r1.y
lt r1.x, r0.x, -r0.x
and r1.x, r1.x, l(0xc0490fdb)
add r0.w, r0.w, r1.x
min r1.x, r0.x, r0.z
lt r1.x, r1.x, -r1.x
max r1.y, r0.x, r0.z

#line 107
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x  // r0.x <- length_1666892416

#line 108
div r0.x, r0.y, r0.x  // r0.x <- result_2917581187

#line 102
ge r0.y, r1.y, -r1.y
and r0.y, r0.y, r1.x
movc r0.y, r0.y, -r0.w, r0.w  // r0.y <- atan2_2653305570

#line 103
mul r0.y, r0.y, l(0.159155)  // r0.y <- result_2979067554

#line 105
frc r1.x, r0.y  // r1.x <- frac_48515091

#line 109
mad r0.y, |r0.x|, l(-0.018729), l(0.074261)
mad r0.y, r0.y, |r0.x|, l(-0.212114)
mad r0.y, r0.y, |r0.x|, l(1.570729)
add r0.z, -|r0.x|, l(1.000000)
lt r0.x, r0.x, -r0.x
sqrt r0.z, r0.z
mul r0.w, r0.z, r0.y
mad r0.w, r0.w, l(-2.000000), l(3.141593)
and r0.x, r0.x, r0.w
mad r0.x, r0.y, r0.z, r0.x

#line 110
add r0.x, -r0.x, l(3.141593)  // r0.x <- result_2343392257

#line 111
mul r1.y, r0.x, l(0.318310)  // r1.y <- result_2689347

#line 113
add r0.xy, r1.xyxx, l(-0.375000, -0.250000, 0.000000, 0.000000)  // r0.x <- result_1616572869.x; r0.y <- result_1616572869.y

#line 117
mad r0.xy, r0.xyxx, l(8.000000, 4.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)  // r0.x <- result_2675832858.x; r0.y <- result_2675832858.y

#line 118
div r0.xy, r0.xyxx, cb0[4].xyxx  // r0.x <- result_2519999998.x; r0.y <- result_2519999998.y

#line 119
add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)  // r0.x <- result_353942418.x; r0.y <- result_353942418.y

#line 120
mul r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r0.x <- result_1619716708.x; r0.y <- result_1619716708.y

#line 121
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0  // r0.x <- textureNode_2513668480.x; r0.y <- textureNode_2513668480.y; r0.z <- textureNode_2513668480.z; r0.w <- textureNode_2513668480.w

#line 123
eq r1.x, r0.w, cb0[4].z  // r1.x <- Assign_3220708745

#line 124
movc o0.xyzw, r1.xxxx, cb0[5].xyzw, r0.xyzw

#line 128
ret 
// Approximately 102 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float4 Position_id14;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float4 Position_id14 : POSITION;
};
struct VS_STREAMS 
{
    float4 Position_id14;
    float4 PositionWS_id15;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float4 Position_id14 : POSITION;
};
struct VS_INPUT 
{
    float4 Position_id14 : POSITION;
};
cbuffer Inputs 
{
    float4x4 input_1898795993_id34;
    float2 input_1755149533_id35;
    float input_291234122_id36;
    float4 input_2880991208_id37;
};
cbuffer PerDraw 
{
    float4x4 World_id24;
    float4x4 WorldInverse_id25;
    float4x4 WorldInverseTranspose_id26;
    float4x4 WorldView_id27;
    float4x4 WorldViewInverse_id28;
    float4x4 WorldViewProjection_id29;
    float3 WorldScale_id30;
    float4 EyeMS_id31;
};
cbuffer PerView 
{
    float4x4 View_id17;
    float4x4 ViewInverse_id18;
    float4x4 Projection_id19;
    float4x4 ProjectionInverse_id20;
    float4x4 ViewProjection_id21;
    float2 ProjScreenRay_id22;
    float4 Eye_id23;
};
Texture2D TextureInput_297517705_id32;
SamplerState SamplerInput_2138948010_id33;
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.Position_id14 = __input__.Position_id14;
    float3 PositionXyz_750160583 = streams.Position_id14.xyz;
    float3 result_525254221 = (PositionXyz_750160583 + float3(0, 0, 0));
    float resultZ_2017668119 = result_525254221.z;
    float resultX_847948846 = result_525254221.x;
    float atan2_1845814256 = atan2(resultZ_2017668119, resultX_847948846);
    float result_1745919424 = (atan2_1845814256 / 6.2831855);
    float result_139253447 = (result_1745919424 + 1);
    float frac_891112767 = frac(result_139253447);
    float resultY_542096227 = result_525254221.y;
    float length_2020406738 = length(result_525254221);
    float result_3794343255 = (resultY_542096227 / length_2020406738);
    float asin_1492385769 = asin(result_3794343255);
    float result_1989824841 = (asin_1492385769 + 1.5707964);
    float result_2124210703 = (result_1989824841 / 3.1415927);
    float2 float2Join_4085164118 = float2(frac_891112767, result_2124210703);
    float float2JoinX_2818131982 = float2Join_4085164118.x;
    float result_2473220602 = (float2JoinX_2818131982 + 0.5);
    float frac_3877918392 = frac(result_2473220602);
    float float2JoinY_3507357790 = float2Join_4085164118.y;
    float result_3792277587 = (1 - float2JoinY_3507357790);
    float2 float2Join_2324377792 = float2(frac_3877918392, result_3792277587);
    float float2JoinX_4068130280 = float2Join_2324377792.x;
    float result_2314784651 = (float2JoinX_4068130280 * 6.2831855);
    float cos_2153052292 = cos(result_2314784651);
    float float2JoinY_2114219064 = float2Join_2324377792.y;
    float result_471106997 = (float2JoinY_2114219064 * 3.1415927);
    float result_101928469 = (result_471106997 - 1.5707964);
    float cos_3152529648 = cos(result_101928469);
    float result_1463666584 = (cos_2153052292 * cos_3152529648);
    float sin_454066563 = sin(result_101928469);
    float sin_2407044834 = sin(result_2314784651);
    float result_2611827178 = (cos_3152529648 * sin_2407044834);
    float3 Float3Join_2433841534 = float3(result_1463666584, sin_454066563, result_2611827178);
    float4 join_3189060349 = float4(Float3Join_2433841534, 1);
    float4 mul_685133710 = mul(join_3189060349, input_1898795993_id34);
    float3 mulXyz_298545683 = mul_685133710.xyz;
    float mulXyzZ_463374971 = mulXyz_298545683.z;
    float mulXyzX_658648204 = mulXyz_298545683.x;
    float atan2_2653305570 = atan2(mulXyzZ_463374971, mulXyzX_658648204);
    float result_2979067554 = (atan2_2653305570 / 6.2831855);
    float result_3991492811 = (result_2979067554 + 1);
    float frac_48515091 = frac(result_3991492811);
    float mulXyzY_4030999847 = mulXyz_298545683.y;
    float length_1666892416 = length(mulXyz_298545683);
    float result_2917581187 = (mulXyzY_4030999847 / length_1666892416);
    float asin_1410840201 = asin(result_2917581187);
    float result_2343392257 = (asin_1410840201 + 1.5707964);
    float result_2689347 = (result_2343392257 / 3.1415927);
    float2 float2Join_2851182476 = float2(frac_48515091, result_2689347);
    float2 result_1616572869 = (float2Join_2851182476 - float2(0.375, 0.25));
    float2 result_2417075514 = (float2(0.625, 0.75) - float2(0.375, 0.25));
    float2 result_3138837978 = (result_1616572869 / result_2417075514);
    float2 result_2029695000 = (result_3138837978 * float2(2, 2));
    float2 result_2675832858 = (result_2029695000 - float2(1, 1));
    float2 result_2519999998 = (result_2675832858 / input_1755149533_id35);
    float2 result_353942418 = (result_2519999998 + float2(1, 1));
    float2 result_1619716708 = (result_353942418 * float2(0.5, 0.5));
    float4 textureNode_2513668480 = TextureInput_297517705_id32.Sample(SamplerInput_2138948010_id33, result_1619716708);
    float textureNodeW_3353152598 = textureNode_2513668480.w;
    bool Assign_3220708745 = textureNodeW_3353152598 == input_291234122_id36;
    float4 expression_269748207 = Assign_3220708745 ? input_2880991208_id37 : textureNode_2513668480;
    streams.ColorTarget_id2 = expression_269748207;
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id14 = __input__.Position_id14;
    streams.PositionWS_id15 = streams.Position_id14;
    float4 mul_937632201 = mul(streams.Position_id14, WorldViewProjection_id29);
    streams.ShadingPosition_id0 = mul_937632201;
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.Position_id14 = streams.Position_id14;
    return __output__;
}
