/**************************
***** Compiler Parameters *****
***************************
@P EffectName: Shader_1586888304
***************************
****  ConstantBuffers  ****
***************************
cbuffer Inputs [Size: 16]
@C    input_3507111262_id92 => input_3507111262
cbuffer PerDraw [Size: 416]
@C    World_id24 => Transformation.World
@C    WorldInverse_id25 => Transformation.WorldInverse
@C    WorldInverseTranspose_id26 => Transformation.WorldInverseTranspose
@C    WorldView_id27 => Transformation.WorldView
@C    WorldViewInverse_id28 => Transformation.WorldViewInverse
@C    WorldViewProjection_id29 => Transformation.WorldViewProjection
@C    WorldScale_id30 => Transformation.WorldScale
@C    EyeMS_id31 => Transformation.EyeMS
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    SamplerInput_872960425_id91 => SamplerInput_872960425 [Stage: Pixel, Slot: (0-0)]
@R    TextureInput_2782830709_id90 => TextureInput_2782830709 [Stage: Pixel, Slot: (0-0)]
@R    Inputs => Inputs [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    Shader_1586888304 => 5768725c70152115f38af80e837f0438
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
***************************
*****     Stages      *****
***************************
@G    Vertex => ff98e50ffc6413f837f5851b40eab595
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 World_id24;               // Offset:    0 Size:    64 [unused]
//   float4x4 WorldInverse_id25;        // Offset:   64 Size:    64 [unused]
//   float4x4 WorldInverseTranspose_id26;// Offset:  128 Size:    64 [unused]
//   float4x4 WorldView_id27;           // Offset:  192 Size:    64 [unused]
//   float4x4 WorldViewInverse_id28;    // Offset:  256 Size:    64 [unused]
//   float4x4 WorldViewProjection_id29; // Offset:  320 Size:    64
//   float3 WorldScale_id30;            // Offset:  384 Size:    12 [unused]
//   float4 EyeMS_id31;                 // Offset:  400 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[24], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id14.x; v0.y <- __input__.Position_id14.y; v0.z <- __input__.Position_id14.z; v0.w <- __input__.Position_id14.w; 
//   v1.x <- __input__.TexCoord_id80.x; v1.y <- __input__.TexCoord_id80.y; 
//   o1.x <- <VSMain return value>.TexCoord_id80.x; o1.y <- <VSMain return value>.TexCoord_id80.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 206 "C:\Projects\MOTF\MOTF_VVVV_6.3\vvvv_gamma_6.3\log\shader_Shader_1586888304_1f34781e69afc2f7efc882f085402d36.hlsl"
dp4 o0.x, v0.xyzw, cb0[20].xyzw
dp4 o0.y, v0.xyzw, cb0[21].xyzw
dp4 o0.z, v0.xyzw, cb0[22].xyzw
dp4 o0.w, v0.xyzw, cb0[23].xyzw

#line 211
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => df9aa7c93eb2fe3be169038079cfaff7
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Inputs
// {
//
//   float2 input_3507111262_id92;      // Offset:    0 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SamplerInput_872960425_id91       sampler      NA          NA             s0      1 
// TextureInput_2782830709_id90      texture  float4          2d             t0      1 
// Inputs                            cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id80.x; v1.y <- __input__.TexCoord_id80.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 154 "C:\Projects\MOTF\MOTF_VVVV_6.3\vvvv_gamma_6.3\log\shader_Shader_1586888304_1f34781e69afc2f7efc882f085402d36.hlsl"
mad r0.xy, v1.xyxx, l(0.250000, 0.500000, 0.000000, 0.000000), l(0.375000, 0.250000, 0.000000, 0.000000)  // r0.x <- lerp_877011057.x; r0.y <- lerp_877011057.y

#line 156
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)  // r0.x <- result_271610848.x; r0.y <- result_271610848.y

#line 158
mad r0.xy, r0.xyxx, cb0[0].xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)  // r0.x <- result_2459356340.x; r0.y <- result_2459356340.y

#line 164
mul r0.x, r0.x, l(3.141593)  // r0.x <- result_2303900693

#line 165
mad r0.y, r0.y, l(1.570796), l(-1.570796)  // r0.y <- result_2344471699

#line 166
sincos r1.x, r2.x, r0.y  // r2.x <- cos_727023256; r1.x <- sin_272815441

#line 162
sincos r0.x, r3.x, r0.x  // r3.x <- cos_4274910952; r0.x <- sin_3846679902

#line 170
mul r0.y, r0.x, r2.x  // r0.y <- result_1573749002

#line 167
mul r0.x, r2.x, r3.x  // r0.x <- result_2588566632

#line 172
mov r0.z, r1.x
mov r0.w, -r1.x

#line 177
lt r1.xy, |r0.zyzz|, |r0.xxxx|  // r1.x <- Assign_54475763; r1.y <- Assign_346340133

#line 180
and r0.z, r1.y, r1.x

#line 179
lt r1.x, r0.x, l(0.000000)  // r1.x <- Assign_1315540880

#line 185
div r0.x, l(0.500000), |r0.x|  // r0.x <- result_1223964012

#line 187
mad r0.xy, r0.ywyy, r0.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r0.x <- result_1160566316.x; r0.y <- result_1160566316.y

#line 189
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)  // r0.x <- result_517531116.x; r0.y <- result_517531116.y

#line 190
div r0.xy, r0.xyxx, cb0[0].xyxx  // r0.x <- result_2264865201.x; r0.y <- result_2264865201.y

#line 191
add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)  // r0.x <- result_2915607594.x; r0.y <- result_2915607594.y

#line 192
mul r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r0.x <- result_2991139676.x; r0.y <- result_2991139676.y

#line 193
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.xyxx, t0.xyzw, s0  // r2.x <- textureNode_2619289225.x; r2.y <- textureNode_2619289225.y; r2.z <- textureNode_2619289225.z; r2.w <- textureNode_2619289225.w

#line 180
and r0.x, r0.z, r1.x  // r0.x <- result_546110133

#line 194
movc o0.xyzw, r0.xxxx, r2.xyzw, l(1.000000,1.000000,0,1.000000)

#line 198
ret 
// Approximately 24 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id80;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id80 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id14;
    float2 TexCoord_id80;
    float4 PositionWS_id15;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id80 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id14 : POSITION;
    float2 TexCoord_id80 : TEXCOORD0;
};
cbuffer Inputs 
{
    float2 input_3507111262_id92;
};
cbuffer PerDraw 
{
    float4x4 World_id24;
    float4x4 WorldInverse_id25;
    float4x4 WorldInverseTranspose_id26;
    float4x4 WorldView_id27;
    float4x4 WorldViewInverse_id28;
    float4x4 WorldViewProjection_id29;
    float3 WorldScale_id30;
    float4 EyeMS_id31;
};
cbuffer PerView 
{
    float4x4 View_id17;
    float4x4 ViewInverse_id18;
    float4x4 Projection_id19;
    float4x4 ProjectionInverse_id20;
    float4x4 ViewProjection_id21;
    float2 ProjScreenRay_id22;
    float4 Eye_id23;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id33;
    float2 Texture1TexelSize_id35;
    float2 Texture2TexelSize_id37;
    float2 Texture3TexelSize_id39;
    float2 Texture4TexelSize_id41;
    float2 Texture5TexelSize_id43;
    float2 Texture6TexelSize_id45;
    float2 Texture7TexelSize_id47;
    float2 Texture8TexelSize_id49;
    float2 Texture9TexelSize_id51;
};
Texture2D Texture0_id32;
Texture2D Texture1_id34;
Texture2D Texture2_id36;
Texture2D Texture3_id38;
Texture2D Texture4_id40;
Texture2D Texture5_id42;
Texture2D Texture6_id44;
Texture2D Texture7_id46;
Texture2D Texture8_id48;
Texture2D Texture9_id50;
TextureCube TextureCube0_id52;
TextureCube TextureCube1_id53;
TextureCube TextureCube2_id54;
TextureCube TextureCube3_id55;
Texture3D Texture3D0_id56;
Texture3D Texture3D1_id57;
Texture3D Texture3D2_id58;
Texture3D Texture3D3_id59;
SamplerState Sampler_id60;
SamplerState PointSampler_id61 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id62 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id63 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id64 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id65 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id66 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id67 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id68 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id69 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id70;
SamplerState Sampler1_id71;
SamplerState Sampler2_id72;
SamplerState Sampler3_id73;
SamplerState Sampler4_id74;
SamplerState Sampler5_id75;
SamplerState Sampler6_id76;
SamplerState Sampler7_id77;
SamplerState Sampler8_id78;
SamplerState Sampler9_id79;
Texture2D TextureInput_2782830709_id90;
SamplerState SamplerInput_872960425_id91;
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id80 = __input__.TexCoord_id80;
    float2 lerp_877011057 = lerp(float2(0.375, 0.25), float2(0.625, 0.75), streams.TexCoord_id80);
    float2 result_735607886 = (lerp_877011057 * float2(2, 2));
    float2 result_271610848 = (result_735607886 - float2(1, 1));
    float2 result_1759847728 = (result_271610848 * input_3507111262_id92);
    float2 result_2459356340 = (result_1759847728 + float2(1, 1));
    float2 result_1245313838 = (result_2459356340 * float2(0.5, 0.5));
    float resultX_1135861536 = result_1245313838.x;
    float result_2303900693 = (resultX_1135861536 * 6.2831855);
    float cos_4274910952 = cos(result_2303900693);
    float resultY_3910225680 = result_1245313838.y;
    float result_355387287 = (resultY_3910225680 * 3.1415927);
    float result_2344471699 = (result_355387287 - 1.5707964);
    float cos_727023256 = cos(result_2344471699);
    float result_2588566632 = (cos_4274910952 * cos_727023256);
    float sin_272815441 = sin(result_2344471699);
    float sin_3846679902 = sin(result_2303900693);
    float result_1573749002 = (cos_727023256 * sin_3846679902);
    float3 Float3Join_1627100554 = float3(result_2588566632, sin_272815441, result_1573749002);
    float3 abs_3931774503 = abs(Float3Join_1627100554);
    float absX_3911230814 = abs_3931774503.x;
    float absY_1407218245 = abs_3931774503.y;
    bool Assign_54475763 = absX_3911230814 > absY_1407218245;
    float absZ_3708004329 = abs_3931774503.z;
    bool Assign_346340133 = absX_3911230814 > absZ_3708004329;
    float Float3JoinX_640609416 = Float3Join_1627100554.x;
    bool Assign_1315540880 = Float3JoinX_640609416 < 0;
    bool result_546110133 = (Assign_54475763 && Assign_346340133 && Assign_1315540880);
    float Float3JoinZ_3811338805 = Float3Join_1627100554.z;
    float Float3JoinY_828405129 = Float3Join_1627100554.y;
    float negate_1313131426 = -Float3JoinY_828405129;
    float2 float2Join_2812415053 = float2(Float3JoinZ_3811338805, negate_1313131426);
    float result_1223964012 = (0.5 / absX_3911230814);
    float2 result_10619516 = (float2Join_2812415053 * result_1223964012);
    float2 result_1160566316 = (result_10619516 + float2(0.5, 0.5));
    float2 result_2964117574 = (result_1160566316 * float2(2, 2));
    float2 result_517531116 = (result_2964117574 - float2(1, 1));
    float2 result_2264865201 = (result_517531116 / input_3507111262_id92);
    float2 result_2915607594 = (result_2264865201 + float2(1, 1));
    float2 result_2991139676 = (result_2915607594 * float2(0.5, 0.5));
    float4 textureNode_2619289225 = TextureInput_2782830709_id90.Sample(SamplerInput_872960425_id91, result_2991139676);
    float4 expression_2295556510 = result_546110133 ? textureNode_2619289225 : float4(1, 1, 0, 1);
    streams.ColorTarget_id2 = expression_2295556510;
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id14 = __input__.Position_id14;
    streams.TexCoord_id80 = __input__.TexCoord_id80;
    streams.PositionWS_id15 = streams.Position_id14;
    float4 mul_3459641245 = mul(streams.Position_id14, WorldViewProjection_id29);
    streams.ShadingPosition_id0 = mul_3459641245;
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id80 = streams.TexCoord_id80;
    return __output__;
}
