/**************************
***** Compiler Parameters *****
***************************
@P EffectName: Shader_1177446177
***************************
****  ConstantBuffers  ****
***************************
cbuffer Inputs [Size: 64]
@C    input_2087590525_id99 => input_2087590525
@C    input_2133135908_id100 => input_2133135908
@C    input_3409833380_id101 => input_3409833380
@C    input_1065507581_id102 => input_1065507581
@C    input_3060400662_id103 => input_3060400662
@C    input_619501253_id104 => input_619501253
cbuffer PerView [Size: 352]
@C    View_id26 => Transformation.View
@C    ViewInverse_id27 => Transformation.ViewInverse
@C    Projection_id28 => Transformation.Projection
@C    ProjectionInverse_id29 => Transformation.ProjectionInverse
@C    ViewProjection_id30 => Transformation.ViewProjection
@C    ProjScreenRay_id31 => Transformation.ProjScreenRay
@C    Eye_id32 => Transformation.Eye
***************************
******  Resources    ******
***************************
@R    Inputs => Inputs [Stage: Pixel, Slot: (0-0)]
@R    PerView => PerView [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    Shader_1177446177 => 5df3ccbe4b4b873fe6478a7a6b11aa52
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
@S    FuseCoreMath => b5527ab1f8082f68a6dcc7c3959ee99a
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
@S    FuseCoreBaseCast => 1273a005630aadfff132dcc52db04833
***************************
*****     Stages      *****
***************************
@G    Vertex => 0b6f5758bceb0f37aca09c3fa6b43875
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id14.x; v0.y <- __input__.Position_id14.y; v0.z <- __input__.Position_id14.z; v0.w <- __input__.Position_id14.w; 
//   v1.x <- __input__.TexCoord_id89.x; v1.y <- __input__.TexCoord_id89.y; 
//   o1.x <- <VSMain return value>.TexCoord_id89.x; o1.y <- <VSMain return value>.TexCoord_id89.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 361 "C:\Projects\MOTF\MOTF_VVVV_6.3\vvvv_gamma_6.3\log\shader_Shader_1177446177_59b4da4864a02919c5ba121eaf6fcc35.hlsl"
mov o0.xyzw, v0.xyzw
mov o1.xy, v1.xyxx
ret 
// Approximately 3 instruction slots used
@G    Pixel => 5fa6aed4d3cf1a0f55f4a2564a786232
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Inputs
// {
//
//   float3 input_2087590525_id99;      // Offset:    0 Size:    12
//   float3 input_2133135908_id100;     // Offset:   16 Size:    12
//   int input_3409833380_id101;        // Offset:   28 Size:     4 [unused]
//   float input_1065507581_id102;      // Offset:   32 Size:     4 [unused]
//   int input_3060400662_id103;        // Offset:   36 Size:     4 [unused]
//   float4 input_619501253_id104;      // Offset:   48 Size:    16
//
// }
//
// cbuffer PerView
// {
//
//   float4x4 View_id26;                // Offset:    0 Size:    64 [unused]
//   float4x4 ViewInverse_id27;         // Offset:   64 Size:    64
//   float4x4 Projection_id28;          // Offset:  128 Size:    64
//   float4x4 ProjectionInverse_id29;   // Offset:  192 Size:    64
//   float4x4 ViewProjection_id30;      // Offset:  256 Size:    64
//   float2 ProjScreenRay_id31;         // Offset:  320 Size:     8 [unused]
//   float4 Eye_id32;                   // Offset:  336 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Inputs                            cbuffer      NA          NA            cb0      1 
// PerView                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Depth                 0    N/A   oDepth    DEPTH   float    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[22], immediateIndexed
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output oDepth
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id89.x; v1.y <- __input__.TexCoord_id89.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w; 
//   oDepth <- <PSMain return value>.Depth_id10
//
#line 213 "C:\Projects\MOTF\MOTF_VVVV_6.3\vvvv_gamma_6.3\log\shader_Shader_1177446177_59b4da4864a02919c5ba121eaf6fcc35.hlsl"
round_ne r0.xy, cb1[11].zwzz  // r0.x <- round_372727212; r0.y <- round_217788735

#line 214
eq r0.xy, r0.xyxx, l(0.000000, 1.000000, 0.000000, 0.000000)  // r0.x <- Assign_499984963; r0.y <- Assign_2730296910

#line 215
and r0.x, r0.y, r0.x  // r0.x <- result_2651622111

#line 221
mad r1.xy, v1.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mov r1.z, l(1.000000)
dp3 r2.x, r1.xyzx, cb1[12].xywx  // r2.x <- mul_2099428402.x
dp3 r2.y, r1.xyzx, cb1[13].xywx  // r2.y <- mul_2099428402.y

#line 240
mov r2.zw, l(0,0,-1.000000,1.000000)

#line 224
dp3 r1.x, r2.xyzx, cb1[4].xyzx  // r1.x <- mul_3538872960.x
dp3 r1.y, r2.xyzx, cb1[5].xyzx  // r1.y <- mul_3538872960.y
dp3 r1.z, r2.xyzx, cb1[6].xyzx  // r1.z <- mul_3538872960.z

#line 226
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r0.yzw, r0.yyyy, r1.xxyz  // r0.y <- normalize_892847185.x; r0.z <- normalize_892847185.y; r0.w <- normalize_892847185.z

#line 240
dp3 r1.x, r2.xywx, cb1[4].xywx  // r1.x <- mul_2339889925.x
dp3 r1.y, r2.xywx, cb1[5].xywx  // r1.y <- mul_2339889925.y
dp3 r1.z, r2.xywx, cb1[6].xywx  // r1.z <- mul_2339889925.z

#line 244
mov r2.x, cb1[4].z
mov r2.y, cb1[5].z
mov r2.z, cb1[6].z
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- normalize_3406566438.x; r2.y <- normalize_3406566438.y; r2.z <- normalize_3406566438.z

#line 250
movc r1.xyz, r0.xxxx, r1.xyzx, cb1[21].xyzx  // r1.x <- output_3932991426.origin.x; r1.y <- output_3932991426.origin.y; r1.z <- output_3932991426.origin.z
movc r0.xyz, r0.xxxx, -r2.xyzx, r0.yzwy  // r0.x <- output_3932991426.direction.x; r0.y <- output_3932991426.direction.y; r0.z <- output_3932991426.direction.z

#line 252
div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzx  // r2.x <- result_1719371487.x; r2.y <- result_1719371487.y; r2.z <- result_1719371487.z

#line 254
add r3.xyz, r1.xyzx, -cb0[0].xyzx  // r3.x <- result_3551909954.x; r3.y <- result_3551909954.y; r3.z <- result_3551909954.z

#line 255
mul r3.xyz, r2.xyzx, r3.xyzx  // r3.x <- result_19655777.x; r3.y <- result_19655777.y; r3.z <- result_19655777.z

#line 258
mul r2.xyz, |r2.xyzx|, cb0[1].xyzx

#line 260
mad r4.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), -r3.xyzx  // r4.x <- result_19649140.x; r4.y <- result_19649140.y; r4.z <- result_19649140.z

#line 202
min r0.w, r4.y, r4.x
min r0.w, r4.z, r0.w  // r0.w <- <minComponent_id12 return value>

#line 263
mad r2.xyz, -r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), -r3.xyzx  // r2.x <- result_3578880217.x; r2.y <- result_3578880217.y; r2.z <- result_3578880217.z

#line 198
max r1.w, r2.y, r2.x
max r1.w, r2.z, r1.w  // r1.w <- <maxComponent_id4 return value>

#line 265
lt r2.x, r0.w, r1.w  // r2.x <- Assign_702661700

#line 266
lt r2.y, r0.w, l(0.000000)  // r2.y <- Assign_1957308012

#line 267
or r2.x, r2.y, r2.x  // r2.x <- result_2796193315

#line 270
discard_nz r2.x

#line 272
max r1.w, r1.w, l(0.000000)  // r1.w <- max_4132750340

#line 300
lt r0.w, r0.w, r1.w  // r0.w <- Assign_986505382

#line 303
discard_nz r0.w

#line 276
mad r1.xyz, r0.xyzx, r1.wwww, r1.xyzx  // r1.x <- result_1584116077.x; r1.y <- result_1584116077.y; r1.z <- result_1584116077.z

#line 332
mov r1.w, l(1.000000)
dp4 r0.y, r1.xyzw, cb1[18].xyzw  // r0.y <- mul_2828395993.z
dp4 r0.z, r1.xyzw, cb1[19].xyzw  // r0.z <- mul_2828395993.w

#line 335
div oDepth, r0.y, r0.z

#line 343
mov_sat r0.x, -r0.x  // r0.x <- saturate_2411500613

#line 344
mul o0.xyz, r0.xxxx, cb0[3].xyzx

#line 350
mov o0.w, l(1.000000)
ret 
// Approximately 51 instruction slots used
***************************
*************************/
static const float PI_id17 = 3.1415926535897;
struct PS_STREAMS 
{
    float2 TexCoord_id89;
    float DepthVS_id16;
    float Depth_id10;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float Depth_id10 : SV_Depth;
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id89 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id14;
    float2 TexCoord_id89;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id89 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id14 : POSITION;
    float2 TexCoord_id89 : TEXCOORD0;
};
struct MarchSurface 
{
    float3 position;
    float3 normal;
    float attribute;
};
struct MarchRay 
{
    float3 origin;
    float3 direction;
};
cbuffer Inputs 
{
    float3 input_2087590525_id99;
    float3 input_2133135908_id100;
    int input_3409833380_id101;
    float input_1065507581_id102;
    int input_3060400662_id103;
    float4 input_619501253_id104;
};
cbuffer PerDraw 
{
    float4x4 World_id33;
    float4x4 WorldInverse_id34;
    float4x4 WorldInverseTranspose_id35;
    float4x4 WorldView_id36;
    float4x4 WorldViewInverse_id37;
    float4x4 WorldViewProjection_id38;
    float3 WorldScale_id39;
    float4 EyeMS_id40;
};
cbuffer PerView 
{
    float4x4 View_id26;
    float4x4 ViewInverse_id27;
    float4x4 Projection_id28;
    float4x4 ProjectionInverse_id29;
    float4x4 ViewProjection_id30;
    float2 ProjScreenRay_id31;
    float4 Eye_id32;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id42;
    float2 Texture1TexelSize_id44;
    float2 Texture2TexelSize_id46;
    float2 Texture3TexelSize_id48;
    float2 Texture4TexelSize_id50;
    float2 Texture5TexelSize_id52;
    float2 Texture6TexelSize_id54;
    float2 Texture7TexelSize_id56;
    float2 Texture8TexelSize_id58;
    float2 Texture9TexelSize_id60;
};
Texture2D Texture0_id41;
Texture2D Texture1_id43;
Texture2D Texture2_id45;
Texture2D Texture3_id47;
Texture2D Texture4_id49;
Texture2D Texture5_id51;
Texture2D Texture6_id53;
Texture2D Texture7_id55;
Texture2D Texture8_id57;
Texture2D Texture9_id59;
TextureCube TextureCube0_id61;
TextureCube TextureCube1_id62;
TextureCube TextureCube2_id63;
TextureCube TextureCube3_id64;
Texture3D Texture3D0_id65;
Texture3D Texture3D1_id66;
Texture3D Texture3D2_id67;
Texture3D Texture3D3_id68;
SamplerState Sampler_id69;
SamplerState PointSampler_id70 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id71 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id72 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id73 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id74 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id75 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id76 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id77 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id78 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id79;
SamplerState Sampler1_id80;
SamplerState Sampler2_id81;
SamplerState Sampler3_id82;
SamplerState Sampler4_id83;
SamplerState Sampler5_id84;
SamplerState Sampler6_id85;
SamplerState Sampler7_id86;
SamplerState Sampler8_id87;
SamplerState Sampler9_id88;
float Function_4098335987_id58(in float3 arg_0)
{
    float fromFloat_2527372819 = 0;
    return fromFloat_2527372819;
}
float Function_4221728737_id60(in float3 arg_0)
{
    float fromFloat_1225357477 = 0;
    return fromFloat_1225357477;
}
bool IsNaN_id16(float3 x)
{
    return (asuint(x) & 0x7fffffff) > 0x7f800000;
}
float3 cast31_id49(float p)
{
    return p.xxx;
}
float Function_3508238688_id59(in float3 arg_0)
{
    float Invoke_606352143 = Function_4098335987_id58(arg_0);
    float InvokeX_1302338880 = Invoke_606352143.x;
    return InvokeX_1302338880;
}
float Function_3145773058_id57(in float3 arg_0)
{
    float fromFloat_2348034828 = 0;
    return fromFloat_2348034828;
}
float maxComponent_id4(float3 theValue)
{
    return max(max(theValue.x, theValue.y), theValue.z);
}
float minComponent_id12(float3 theValue)
{
    return min(min(theValue.x, theValue.y), theValue.z);
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id89 = __input__.TexCoord_id89;
    float Projection_34_1350015204 = Projection_id28._34;
    float round_372727212 = round(Projection_34_1350015204);
    bool Assign_499984963 = round_372727212 == 0;
    float4 GetItem_4000312077 = Projection_id28[3];
    float GetItemW_551172534 = GetItem_4000312077.w;
    float round_217788735 = round(GetItemW_551172534);
    bool Assign_2730296910 = round_217788735 == 1;
    bool result_2651622111 = (Assign_499984963 && Assign_2730296910);
    float3 EyeXyz_929219594 = Eye_id32.xyz;
    float2 result_344354742 = (streams.TexCoord_id89 * float2(2, 2));
    float2 result_568564880 = (result_344354742 - float2(1, 1));
    float2 result_1497659122 = (result_568564880 * float2(1, -1));
    float4 join_856363743 = float4(result_1497659122, float2(0, 1));
    float4 mul_2099428402 = mul(join_856363743, ProjectionInverse_id29);
    float2 mulXy_2577437967 = mul_2099428402.xy;
    float4 join_2447551352 = float4(mulXy_2577437967, float2(-1, 0));
    float4 mul_3538872960 = mul(join_2447551352, ViewInverse_id27);
    float3 mulXyz_756228628 = mul_3538872960.xyz;
    float3 normalize_892847185 = normalize(mulXyz_756228628);
    MarchRay marchRay_1270242788;
    marchRay_1270242788.origin = EyeXyz_929219594;
    marchRay_1270242788.direction = normalize_892847185;
    MarchRay output_3932991426 = marchRay_1270242788;
    if (result_2651622111)
    {
        float2 result_1300199639 = (streams.TexCoord_id89 * float2(2, 2));
        float2 result_72504539 = (result_1300199639 - float2(1, 1));
        float2 result_3690947945 = (result_72504539 * float2(1, -1));
        float4 join_2591432288 = float4(result_3690947945, float2(0, 1));
        float4 mul_4026393805 = mul(join_2591432288, ProjectionInverse_id29);
        float2 mulXy_2023851420 = mul_4026393805.xy;
        float4 join_3650518731 = float4(mulXy_2023851420, float2(0, 1));
        float4 mul_2339889925 = mul(join_3650518731, ViewInverse_id27);
        float3 mulXyz_2451760524 = mul_2339889925.xyz;
        float4 GetItem_3449293365 = ViewInverse_id27[2];
        float3 GetItemXyz_1769303535 = GetItem_3449293365.xyz;
        float3 normalize_3406566438 = normalize(GetItemXyz_1769303535);
        float3 negate_694166496 = -normalize_3406566438;
        MarchRay marchRay_2017418108;
        marchRay_2017418108.origin = mulXyz_2451760524;
        marchRay_2017418108.direction = negate_694166496;
        output_3932991426 = marchRay_2017418108;
    }
    float3 AddOutputDirection_2845523670 = output_3932991426.direction;
    float3 result_1719371487 = (float3(1, 1, 1) / AddOutputDirection_2845523670);
    float3 AddOutputOrigin_1305501719 = output_3932991426.origin;
    float3 result_3551909954 = (AddOutputOrigin_1305501719 - input_2087590525_id99);
    float3 result_19655777 = (result_1719371487 * result_3551909954);
    float3 negate_3714597497 = -result_19655777;
    float3 abs_2602755911 = abs(result_1719371487);
    float3 result_3012520316 = (input_2133135908_id100 * float3(0.5, 0.5, 0.5));
    float3 result_3512284240 = (abs_2602755911 * result_3012520316);
    float3 result_19649140 = (negate_3714597497 + result_3512284240);
    float minComponent_1037838346 = minComponent_id12(result_19649140);
    float3 AddOutputDirection_36416084 = output_3932991426.direction;
    float3 result_3578880217 = (negate_3714597497 - result_3512284240);
    float maxComponent_4244790370 = maxComponent_id4(result_3578880217);
    bool Assign_702661700 = maxComponent_4244790370 > minComponent_1037838346;
    bool Assign_1957308012 = minComponent_1037838346 < 0;
    bool result_2796193315 = (Assign_702661700 || Assign_1957308012);
    if (result_2796193315)
    {
        discard;
    }
    float max_4132750340 = max(maxComponent_4244790370, 0);
    float output_2515354859 = max_4132750340;
    float3 result_1557701253 = (AddOutputDirection_36416084 * max_4132750340);
    float3 AddOutputOrigin_1491219157 = output_3932991426.origin;
    float3 result_1584116077 = (result_1557701253 + AddOutputOrigin_1491219157);
    float3 output_2176000944 = result_1584116077;

    for (int index_2713113584 = 0; index_2713113584 < input_3409833380_id101; index_2713113584++)
    {
        float Invoke_4251076614 = Function_3145773058_id57(output_2176000944);
        float InvokeX_1246797786 = Invoke_4251076614.x;
        float result_2354973350 = (output_2515354859 + InvokeX_1246797786);
        output_2515354859 = result_2354973350;
        float3 result_1428682173 = (AddOutputDirection_36416084 * InvokeX_1246797786);
        float3 result_2637593420 = (result_1428682173 + output_2176000944);
        output_2176000944 = result_2637593420;
        bool Assign_2995384969 = minComponent_1037838346 < result_2354973350;
        float result_67474429 = (result_2354973350 * 0.0001);
        float abs_2613974692 = abs(InvokeX_1246797786);
        bool Assign_2880823194 = result_67474429 > abs_2613974692;
        bool result_666712963 = (Assign_2995384969 || Assign_2880823194);
        if (result_666712963)
        {
            break;
        }
        output_2515354859 = output_2515354859;
        output_2176000944 = output_2176000944;
    }
    bool Assign_986505382 = output_2515354859 > minComponent_1037838346;
    if (Assign_986505382)
    {
        discard;
    }
    float Invoke_2923059579 = Function_3508238688_id59(output_2176000944);
    float3 cast31_1021990471 = cast31_id49(Invoke_2923059579);
    float3 output_3801803678 = cast31_1021990471;

    [unroll]
    for (int index_240879111 = 0; index_240879111 < input_3060400662_id103; index_240879111++)
    {
        float3 output_1327897387 = float3(0, 0, 0);
        output_1327897387[index_240879111] = input_1065507581_id102;
        float3 result_2240428363 = (output_2176000944 + output_1327897387);
        float Invoke_1418860345 = Function_3508238688_id59(result_2240428363);
        float GetItem_2581199955 = output_3801803678[index_240879111];
        float result_4132544342 = (Invoke_1418860345 - GetItem_2581199955);
        float result_4042681213 = (result_4132544342 / input_1065507581_id102);
        output_3801803678[index_240879111] = result_4042681213;
        output_3801803678 = output_3801803678;
    }
    float3 normalize_3871409564 = normalize(output_3801803678);
    bool IsNaN_2755113176 = IsNaN_id16(normalize_3871409564);
    float3 expression_558224865 = IsNaN_2755113176 ? float3(1, 0, 0) : normalize_3871409564;
    float Invoke_2393046721 = Function_4221728737_id60(output_2176000944);
    MarchSurface marchSurface_2128859618;
    marchSurface_2128859618.position = output_2176000944;
    marchSurface_2128859618.normal = expression_558224865;
    marchSurface_2128859618.attribute = Invoke_2393046721;
    float3 marchSurfacePosition_3657648466 = marchSurface_2128859618.position;
    float4 join_3691386322 = float4(marchSurfacePosition_3657648466, 1);
    float4 mul_2828395993 = mul(join_3691386322, ViewProjection_id30);
    float mulZ_1269090034 = mul_2828395993.z;
    float mulW_261284294 = mul_2828395993.w;
    float result_307034035 = (mulZ_1269090034 / mulW_261284294);
    streams.Depth_id10 = result_307034035;
    streams.DepthVS_id16 = mulW_261284294;
    float3 inputXyz_2160594578 = input_619501253_id104.xyz;
    float3 AddOutputDirection_1458753912 = output_3932991426.direction;
    float3 marchSurfaceNormal_3644686244 = marchSurface_2128859618.normal;
    float3 negate_1773721590 = -marchSurfaceNormal_3644686244;
    float dot_3287623523 = dot(AddOutputDirection_1458753912, negate_1773721590);
    float saturate_2411500613 = saturate(dot_3287623523);
    float3 result_2843600346 = (inputXyz_2160594578 * saturate_2411500613);
    float4 join_3661190402 = float4(result_2843600346, 1);
    streams.ColorTarget_id2 = join_3661190402;
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.Depth_id10 = streams.Depth_id10;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id14 = __input__.Position_id14;
    streams.TexCoord_id89 = __input__.TexCoord_id89;
    streams.ShadingPosition_id0 = streams.Position_id14;
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id89 = streams.TexCoord_id89;
    return __output__;
}
