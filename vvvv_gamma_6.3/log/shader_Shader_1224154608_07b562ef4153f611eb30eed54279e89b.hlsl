/**************************
***** Compiler Parameters *****
***************************
@P EffectName: Shader_1224154608
***************************
****  ConstantBuffers  ****
***************************
cbuffer Inputs [Size: 80]
@C    input_3882222954_id92 => input_3882222954
@C    input_3948472782_id93 => input_3948472782
@C    input_473278745_id94 => input_473278745
cbuffer PerDraw [Size: 416]
@C    World_id24 => Transformation.World
@C    WorldInverse_id25 => Transformation.WorldInverse
@C    WorldInverseTranspose_id26 => Transformation.WorldInverseTranspose
@C    WorldView_id27 => Transformation.WorldView
@C    WorldViewInverse_id28 => Transformation.WorldViewInverse
@C    WorldViewProjection_id29 => Transformation.WorldViewProjection
@C    WorldScale_id30 => Transformation.WorldScale
@C    EyeMS_id31 => Transformation.EyeMS
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    SamplerInput_3291009721_id91 => SamplerInput_3291009721 [Stage: Pixel, Slot: (0-0)]
@R    TextureInput_4169362458_id90 => TextureInput_4169362458 [Stage: Pixel, Slot: (0-0)]
@R    Inputs => Inputs [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    Shader_1224154608 => fdb254f9f885a5ad637482d9711e6674
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
@S    Texturing => 91ef3011c1071c2e5d41cd3ee0418b18
***************************
*****     Stages      *****
***************************
@G    Vertex => ff98e50ffc6413f837f5851b40eab595
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 World_id24;               // Offset:    0 Size:    64 [unused]
//   float4x4 WorldInverse_id25;        // Offset:   64 Size:    64 [unused]
//   float4x4 WorldInverseTranspose_id26;// Offset:  128 Size:    64 [unused]
//   float4x4 WorldView_id27;           // Offset:  192 Size:    64 [unused]
//   float4x4 WorldViewInverse_id28;    // Offset:  256 Size:    64 [unused]
//   float4x4 WorldViewProjection_id29; // Offset:  320 Size:    64
//   float3 WorldScale_id30;            // Offset:  384 Size:    12 [unused]
//   float4 EyeMS_id31;                 // Offset:  400 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[24], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id14.x; v0.y <- __input__.Position_id14.y; v0.z <- __input__.Position_id14.z; v0.w <- __input__.Position_id14.w; 
//   v1.x <- __input__.TexCoord_id80.x; v1.y <- __input__.TexCoord_id80.y; 
//   o1.x <- <VSMain return value>.TexCoord_id80.x; o1.y <- <VSMain return value>.TexCoord_id80.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 207 "C:\Projects\MOTF\MOTF_VVVV_6.3\vvvv_gamma_6.3\log\shader_Shader_1224154608_07b562ef4153f611eb30eed54279e89b.hlsl"
dp4 o0.x, v0.xyzw, cb0[20].xyzw
dp4 o0.y, v0.xyzw, cb0[21].xyzw
dp4 o0.z, v0.xyzw, cb0[22].xyzw
dp4 o0.w, v0.xyzw, cb0[23].xyzw

#line 212
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 41fc9bb7d5f6bb99dea8de0af4f1d630
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Inputs
// {
//
//   float4x4 input_3882222954_id92;    // Offset:    0 Size:    64
//   float2 input_3948472782_id93;      // Offset:   64 Size:     8
//   float input_473278745_id94;        // Offset:   72 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SamplerInput_3291009721_id91      sampler      NA          NA             s0      1 
// TextureInput_4169362458_id90      texture  float4          2d             t0      1 
// Inputs                            cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id80.x; v1.y <- __input__.TexCoord_id80.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 160 "C:\Projects\MOTF\MOTF_VVVV_6.3\vvvv_gamma_6.3\log\shader_Shader_1224154608_07b562ef4153f611eb30eed54279e89b.hlsl"
mul r0.x, v1.x, l(6.283185)  // r0.x <- result_1045915912

#line 158
sincos r0.x, r1.x, r0.x  // r1.x <- cos_1171133743; r0.x <- sin_92088351

#line 161
mad r0.y, v1.y, l(3.141593), l(-1.570796)  // r0.y <- result_1062795172

#line 162
sincos r2.x, r3.x, r0.y  // r3.x <- cos_2753699587; r2.x <- sin_3054195432

#line 163
mul r1.x, r1.x, r3.x  // r1.x <- result_2300393139

#line 166
mul r1.z, r0.x, r3.x  // r1.z <- result_2796959823

#line 169
mov r1.y, r2.x
mov r1.w, l(1.000000)
dp4 r0.z, r1.xyzw, cb0[2].xyzw  // r0.z <- mul_2899987875.z
dp4 r0.x, r1.xyzw, cb0[0].xyzw  // r0.x <- mul_2899987875.x
dp4 r0.y, r1.xyzw, cb0[1].xyzw  // r0.y <- mul_2899987875.y

#line 173
max r0.w, |r0.x|, |r0.z|
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
min r1.x, |r0.x|, |r0.z|
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, r0.w
mad r1.y, r1.x, l(0.020835), l(-0.085133)
mad r1.y, r1.x, r1.y, l(0.180141)
mad r1.y, r1.x, r1.y, l(-0.330299)
mad r1.x, r1.x, r1.y, l(0.999866)
mul r1.y, r0.w, r1.x
mad r1.y, r1.y, l(-2.000000), l(1.570796)
lt r1.z, |r0.x|, |r0.z|
and r1.y, r1.z, r1.y
mad r0.w, r0.w, r1.x, r1.y
lt r1.x, r0.x, -r0.x
and r1.x, r1.x, l(0xc0490fdb)
add r0.w, r0.w, r1.x
min r1.x, r0.x, r0.z
lt r1.x, r1.x, -r1.x
max r1.y, r0.x, r0.z

#line 178
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x  // r0.x <- length_3579522955

#line 179
div r0.x, r0.y, r0.x  // r0.x <- result_1214842152

#line 173
ge r0.y, r1.y, -r1.y
and r0.y, r0.y, r1.x
movc r0.y, r0.y, -r0.w, r0.w  // r0.y <- atan2_1339552991

#line 174
mul r0.y, r0.y, l(0.159155)  // r0.y <- result_4184310791

#line 176
frc r1.x, r0.y  // r1.x <- frac_1305312934

#line 180
mad r0.y, |r0.x|, l(-0.018729), l(0.074261)
mad r0.y, r0.y, |r0.x|, l(-0.212114)
mad r0.y, r0.y, |r0.x|, l(1.570729)
add r0.z, -|r0.x|, l(1.000000)
lt r0.x, r0.x, -r0.x
sqrt r0.z, r0.z
mul r0.w, r0.z, r0.y
mad r0.w, r0.w, l(-2.000000), l(3.141593)
and r0.x, r0.x, r0.w
mad r0.x, r0.y, r0.z, r0.x

#line 181
add r0.x, -r0.x, l(3.141593)  // r0.x <- result_2614138448

#line 182
mul r1.y, r0.x, l(0.318310)  // r1.y <- result_459004406

#line 184
add r0.xy, r1.xyxx, l(-0.375000, -0.250000, 0.000000, 0.000000)  // r0.x <- result_1508404766.x; r0.y <- result_1508404766.y

#line 188
mad r0.xy, r0.xyxx, l(8.000000, 4.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)  // r0.x <- result_2144155367.x; r0.y <- result_2144155367.y

#line 189
div r0.xy, r0.xyxx, cb0[4].xyxx  // r0.x <- result_1821462005.x; r0.y <- result_1821462005.y

#line 190
add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)  // r0.x <- result_1642921479.x; r0.y <- result_1642921479.y

#line 191
mul r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r0.x <- result_1146844893.x; r0.y <- result_1146844893.y

#line 192
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0  // r0.x <- textureNode_1407752729.x; r0.y <- textureNode_1407752729.y; r0.z <- textureNode_1407752729.z; r0.w <- textureNode_1407752729.w

#line 194
eq r1.x, r0.w, cb0[4].z  // r1.x <- Assign_734674200

#line 195
movc o0.xyzw, r1.xxxx, l(0,0,0,1.000000), r0.xyzw

#line 199
ret 
// Approximately 60 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id80;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id80 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id14;
    float2 TexCoord_id80;
    float4 PositionWS_id15;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id80 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id14 : POSITION;
    float2 TexCoord_id80 : TEXCOORD0;
};
cbuffer Inputs 
{
    float4x4 input_3882222954_id92;
    float2 input_3948472782_id93;
    float input_473278745_id94;
};
cbuffer PerDraw 
{
    float4x4 World_id24;
    float4x4 WorldInverse_id25;
    float4x4 WorldInverseTranspose_id26;
    float4x4 WorldView_id27;
    float4x4 WorldViewInverse_id28;
    float4x4 WorldViewProjection_id29;
    float3 WorldScale_id30;
    float4 EyeMS_id31;
};
cbuffer PerView 
{
    float4x4 View_id17;
    float4x4 ViewInverse_id18;
    float4x4 Projection_id19;
    float4x4 ProjectionInverse_id20;
    float4x4 ViewProjection_id21;
    float2 ProjScreenRay_id22;
    float4 Eye_id23;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id33;
    float2 Texture1TexelSize_id35;
    float2 Texture2TexelSize_id37;
    float2 Texture3TexelSize_id39;
    float2 Texture4TexelSize_id41;
    float2 Texture5TexelSize_id43;
    float2 Texture6TexelSize_id45;
    float2 Texture7TexelSize_id47;
    float2 Texture8TexelSize_id49;
    float2 Texture9TexelSize_id51;
};
Texture2D Texture0_id32;
Texture2D Texture1_id34;
Texture2D Texture2_id36;
Texture2D Texture3_id38;
Texture2D Texture4_id40;
Texture2D Texture5_id42;
Texture2D Texture6_id44;
Texture2D Texture7_id46;
Texture2D Texture8_id48;
Texture2D Texture9_id50;
TextureCube TextureCube0_id52;
TextureCube TextureCube1_id53;
TextureCube TextureCube2_id54;
TextureCube TextureCube3_id55;
Texture3D Texture3D0_id56;
Texture3D Texture3D1_id57;
Texture3D Texture3D2_id58;
Texture3D Texture3D3_id59;
SamplerState Sampler_id60;
SamplerState PointSampler_id61 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id62 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id63 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id64 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id65 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id66 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id67 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id68 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id69 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id70;
SamplerState Sampler1_id71;
SamplerState Sampler2_id72;
SamplerState Sampler3_id73;
SamplerState Sampler4_id74;
SamplerState Sampler5_id75;
SamplerState Sampler6_id76;
SamplerState Sampler7_id77;
SamplerState Sampler8_id78;
SamplerState Sampler9_id79;
Texture2D TextureInput_4169362458_id90;
SamplerState SamplerInput_3291009721_id91;
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id80 = __input__.TexCoord_id80;
    float TexCoordX_3632082171 = streams.TexCoord_id80.x;
    float result_1045915912 = (TexCoordX_3632082171 * 6.2831855);
    float cos_1171133743 = cos(result_1045915912);
    float TexCoordY_746529673 = streams.TexCoord_id80.y;
    float result_2222634502 = (TexCoordY_746529673 * 3.1415927);
    float result_1062795172 = (result_2222634502 - 1.5707964);
    float cos_2753699587 = cos(result_1062795172);
    float result_2300393139 = (cos_1171133743 * cos_2753699587);
    float sin_3054195432 = sin(result_1062795172);
    float sin_92088351 = sin(result_1045915912);
    float result_2796959823 = (cos_2753699587 * sin_92088351);
    float3 Float3Join_3691042893 = float3(result_2300393139, sin_3054195432, result_2796959823);
    float4 join_1140173678 = float4(Float3Join_3691042893, 1);
    float4 mul_2899987875 = mul(join_1140173678, input_3882222954_id92);
    float3 mulXyz_4191442496 = mul_2899987875.xyz;
    float mulXyzZ_2736262630 = mulXyz_4191442496.z;
    float mulXyzX_1880729087 = mulXyz_4191442496.x;
    float atan2_1339552991 = atan2(mulXyzZ_2736262630, mulXyzX_1880729087);
    float result_4184310791 = (atan2_1339552991 / 6.2831855);
    float result_2892586702 = (result_4184310791 + 1);
    float frac_1305312934 = frac(result_2892586702);
    float mulXyzY_2034328114 = mulXyz_4191442496.y;
    float length_3579522955 = length(mulXyz_4191442496);
    float result_1214842152 = (mulXyzY_2034328114 / length_3579522955);
    float asin_2544403160 = asin(result_1214842152);
    float result_2614138448 = (asin_2544403160 + 1.5707964);
    float result_459004406 = (result_2614138448 / 3.1415927);
    float2 float2Join_2255443997 = float2(frac_1305312934, result_459004406);
    float2 result_1508404766 = (float2Join_2255443997 - float2(0.375, 0.25));
    float2 result_1544131345 = (float2(0.625, 0.75) - float2(0.375, 0.25));
    float2 result_408697759 = (result_1508404766 / result_1544131345);
    float2 result_3732159771 = (result_408697759 * float2(2, 2));
    float2 result_2144155367 = (result_3732159771 - float2(1, 1));
    float2 result_1821462005 = (result_2144155367 / input_3948472782_id93);
    float2 result_1642921479 = (result_1821462005 + float2(1, 1));
    float2 result_1146844893 = (result_1642921479 * float2(0.5, 0.5));
    float4 textureNode_1407752729 = TextureInput_4169362458_id90.Sample(SamplerInput_3291009721_id91, result_1146844893);
    float textureNodeW_3377274587 = textureNode_1407752729.w;
    bool Assign_734674200 = textureNodeW_3377274587 == input_473278745_id94;
    float4 expression_3806481404 = Assign_734674200 ? float4(0, 0, 0, 1) : textureNode_1407752729;
    streams.ColorTarget_id2 = expression_3806481404;
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id14 = __input__.Position_id14;
    streams.TexCoord_id80 = __input__.TexCoord_id80;
    streams.PositionWS_id15 = streams.Position_id14;
    float4 mul_3466034004 = mul(streams.Position_id14, WorldViewProjection_id29);
    streams.ShadingPosition_id0 = mul_3466034004;
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id80 = streams.TexCoord_id80;
    return __output__;
}
