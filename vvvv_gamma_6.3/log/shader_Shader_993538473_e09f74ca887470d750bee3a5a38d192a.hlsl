/**************************
***** Compiler Parameters *****
***************************
@P EffectName: Shader_993538473
***************************
****  ConstantBuffers  ****
***************************
cbuffer Inputs [Size: 112]
@C    input_717138365_id34 => input_717138365
@C    input_3345405845_id35 => input_3345405845
@C    input_3610066641_id36 => input_3610066641
@C    input_2690997404_id37 => input_2690997404
@C    input_1184588413_id38 => input_1184588413
cbuffer PerDraw [Size: 416]
@C    World_id24 => Transformation.World
@C    WorldInverse_id25 => Transformation.WorldInverse
@C    WorldInverseTranspose_id26 => Transformation.WorldInverseTranspose
@C    WorldView_id27 => Transformation.WorldView
@C    WorldViewInverse_id28 => Transformation.WorldViewInverse
@C    WorldViewProjection_id29 => Transformation.WorldViewProjection
@C    WorldScale_id30 => Transformation.WorldScale
@C    EyeMS_id31 => Transformation.EyeMS
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    SamplerInput_3294123428_id33 => SamplerInput_3294123428 [Stage: Pixel, Slot: (0-0)]
@R    TextureInput_1006085757_id32 => TextureInput_1006085757 [Stage: Pixel, Slot: (0-0)]
@R    Inputs => Inputs [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    Shader_993538473 => 9410d28cbffc621950d208e47d34bdcb
@S    ShaderBase => 4ecbcd2528b64a79eebe81a863892d8c
@S    ShaderBaseStream => b705b699a7385d39c7de52a8d13f3978
@S    PositionStream4 => 992b49e1b4dd13d8ef84a05830d70229
@S    Transformation => 7c995c14d4da978d7dca233f15f1e7c0
***************************
*****     Stages      *****
***************************
@G    Vertex => c086ee0ec0a901f843b67538a3776fe6
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 World_id24;               // Offset:    0 Size:    64 [unused]
//   float4x4 WorldInverse_id25;        // Offset:   64 Size:    64 [unused]
//   float4x4 WorldInverseTranspose_id26;// Offset:  128 Size:    64 [unused]
//   float4x4 WorldView_id27;           // Offset:  192 Size:    64 [unused]
//   float4x4 WorldViewInverse_id28;    // Offset:  256 Size:    64 [unused]
//   float4x4 WorldViewProjection_id29; // Offset:  320 Size:    64
//   float3 WorldScale_id30;            // Offset:  384 Size:    12 [unused]
//   float4 EyeMS_id31;                 // Offset:  400 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[24], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
//
// Initial variable locations:
//   v0.x <- __input__.Position_id14.x; v0.y <- __input__.Position_id14.y; v0.z <- __input__.Position_id14.z; v0.w <- __input__.Position_id14.w; 
//   o1.x <- <VSMain return value>.Position_id14.x; o1.y <- <VSMain return value>.Position_id14.y; o1.z <- <VSMain return value>.Position_id14.z; o1.w <- <VSMain return value>.Position_id14.w; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 136 "C:\Projects\MOTF\MOTF_VVVV_6.3\vvvv_gamma_6.3\log\shader_Shader_993538473_e09f74ca887470d750bee3a5a38d192a.hlsl"
dp4 o0.x, v0.xyzw, cb0[20].xyzw
dp4 o0.y, v0.xyzw, cb0[21].xyzw
dp4 o0.z, v0.xyzw, cb0[22].xyzw
dp4 o0.w, v0.xyzw, cb0[23].xyzw

#line 141
mov o1.xyzw, v0.xyzw
ret 
// Approximately 6 instruction slots used
@G    Pixel => 127da17bf4a352355a53ac0871be0698
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Inputs
// {
//
//   float3 input_717138365_id34;       // Offset:    0 Size:    12
//   float4x4 input_3345405845_id35;    // Offset:   16 Size:    64
//   float2 input_3610066641_id36;      // Offset:   80 Size:     8
//   float input_2690997404_id37;       // Offset:   88 Size:     4
//   float4 input_1184588413_id38;      // Offset:   96 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SamplerInput_3294123428_id33      sampler      NA          NA             s0      1 
// TextureInput_1006085757_id32      texture  float4          2d             t0      1 
// Inputs                            cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.Position_id14.x; v1.y <- __input__.Position_id14.y; v1.z <- __input__.Position_id14.z; v1.w <- __input__.Position_id14.w; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 66 "C:\Projects\MOTF\MOTF_VVVV_6.3\vvvv_gamma_6.3\log\shader_Shader_993538473_e09f74ca887470d750bee3a5a38d192a.hlsl"
add r0.xyz, v1.xyzx, cb0[0].xyzx  // r0.x <- result_863451576.x; r0.y <- result_863451576.y; r0.z <- result_863451576.z

#line 69
max r0.w, |r0.x|, |r0.z|
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
min r1.x, |r0.x|, |r0.z|
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, r0.w
mad r1.y, r1.x, l(0.020835), l(-0.085133)
mad r1.y, r1.x, r1.y, l(0.180141)
mad r1.y, r1.x, r1.y, l(-0.330299)
mad r1.x, r1.x, r1.y, l(0.999866)
mul r1.y, r0.w, r1.x
mad r1.y, r1.y, l(-2.000000), l(1.570796)
lt r1.z, |r0.x|, |r0.z|
and r1.y, r1.z, r1.y
mad r0.w, r0.w, r1.x, r1.y
lt r1.x, r0.x, -r0.x
and r1.x, r1.x, l(0xc0490fdb)
add r0.w, r0.w, r1.x
min r1.x, r0.x, r0.z
lt r1.x, r1.x, -r1.x
max r1.y, r0.x, r0.z
ge r1.y, r1.y, -r1.y
and r1.x, r1.y, r1.x
movc r0.w, r1.x, -r0.w, r0.w  // r0.w <- atan2_2468475509

#line 70
mul r0.w, r0.w, l(0.159155)  // r0.w <- result_1332623241

#line 72
frc r0.w, r0.w  // r0.w <- frac_3503166894

#line 81
add r0.w, r0.w, l(0.500000)  // r0.w <- result_1751919341

#line 82
frc r0.w, r0.w  // r0.w <- frac_3011594453

#line 87
mul r0.w, r0.w, l(6.283185)  // r0.w <- result_1666911735

#line 88
sincos r1.x, r2.x, r0.w  // r2.x <- cos_3540654414; r1.x <- sin_1570135168

#line 74
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x  // r0.x <- length_1270879381

#line 75
div r0.x, r0.y, r0.x  // r0.x <- result_789176160

#line 76
mad r0.y, |r0.x|, l(-0.018729), l(0.074261)
mad r0.y, r0.y, |r0.x|, l(-0.212114)
mad r0.y, r0.y, |r0.x|, l(1.570729)
add r0.z, -|r0.x|, l(1.000000)
lt r0.x, r0.x, -r0.x
sqrt r0.z, r0.z
mul r0.w, r0.z, r0.y
mad r0.w, r0.w, l(-2.000000), l(3.141593)
and r0.x, r0.x, r0.w
mad r0.x, r0.y, r0.z, r0.x

#line 77
add r0.x, -r0.x, l(3.141593)  // r0.x <- result_873632312

#line 84
mad r0.x, -r0.x, l(0.318310), l(1.000000)  // r0.x <- result_155667802

#line 91
mad r0.x, r0.x, l(3.141593), l(-1.570796)  // r0.x <- result_1364057265

#line 92
sincos r0.x, r3.x, r0.x  // r3.x <- cos_1972423666; r0.x <- sin_2037584111

#line 93
mul r2.x, r2.x, r3.x  // r2.x <- result_3294812938

#line 96
mul r2.z, r1.x, r3.x  // r2.z <- result_532869800

#line 99
mov r2.y, r0.x
mov r2.w, l(1.000000)
dp4 r0.z, r2.xyzw, cb0[3].xyzw  // r0.z <- mul_2886624532.z
dp4 r0.x, r2.xyzw, cb0[1].xyzw  // r0.x <- mul_2886624532.x
dp4 r0.y, r2.xyzw, cb0[2].xyzw  // r0.y <- mul_2886624532.y

#line 103
max r0.w, |r0.x|, |r0.z|
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
min r1.x, |r0.x|, |r0.z|
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, r0.w
mad r1.y, r1.x, l(0.020835), l(-0.085133)
mad r1.y, r1.x, r1.y, l(0.180141)
mad r1.y, r1.x, r1.y, l(-0.330299)
mad r1.x, r1.x, r1.y, l(0.999866)
mul r1.y, r0.w, r1.x
mad r1.y, r1.y, l(-2.000000), l(1.570796)
lt r1.z, |r0.x|, |r0.z|
and r1.y, r1.z, r1.y
mad r0.w, r0.w, r1.x, r1.y
lt r1.x, r0.x, -r0.x
and r1.x, r1.x, l(0xc0490fdb)
add r0.w, r0.w, r1.x
min r1.x, r0.x, r0.z
lt r1.x, r1.x, -r1.x
max r1.y, r0.x, r0.z

#line 108
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x  // r0.x <- length_3970842514

#line 109
div r0.x, r0.y, r0.x  // r0.x <- result_3169758639

#line 103
ge r0.y, r1.y, -r1.y
and r0.y, r0.y, r1.x
movc r0.y, r0.y, -r0.w, r0.w  // r0.y <- atan2_964478592

#line 104
mul r0.y, r0.y, l(0.159155)  // r0.y <- result_3903161712

#line 106
frc r1.x, r0.y  // r1.x <- frac_4161593135

#line 110
mad r0.y, |r0.x|, l(-0.018729), l(0.074261)
mad r0.y, r0.y, |r0.x|, l(-0.212114)
mad r0.y, r0.y, |r0.x|, l(1.570729)
add r0.z, -|r0.x|, l(1.000000)
lt r0.x, r0.x, -r0.x
sqrt r0.z, r0.z
mul r0.w, r0.z, r0.y
mad r0.w, r0.w, l(-2.000000), l(3.141593)
and r0.x, r0.x, r0.w
mad r0.x, r0.y, r0.z, r0.x

#line 111
add r0.x, -r0.x, l(3.141593)  // r0.x <- result_1174355717

#line 112
mul r1.y, r0.x, l(0.318310)  // r1.y <- result_1620035583

#line 114
add r0.xy, r1.xyxx, l(-0.375000, -0.250000, 0.000000, 0.000000)  // r0.x <- result_1931394049.x; r0.y <- result_1931394049.y

#line 118
mad r0.xy, r0.xyxx, l(8.000000, 4.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)  // r0.x <- result_381279544.x; r0.y <- result_381279544.y

#line 119
div r0.xy, r0.xyxx, cb0[5].xyxx  // r0.x <- result_2194720680.x; r0.y <- result_2194720680.y

#line 120
add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)  // r0.x <- result_2760243920.x; r0.y <- result_2760243920.y

#line 121
mul r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r0.x <- result_3097218498.x; r0.y <- result_3097218498.y

#line 122
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0  // r0.x <- textureNode_2641225958.x; r0.y <- textureNode_2641225958.y; r0.z <- textureNode_2641225958.z; r0.w <- textureNode_2641225958.w

#line 124
eq r1.x, r0.w, cb0[5].z  // r1.x <- Assign_772615077

#line 125
movc o0.xyzw, r1.xxxx, cb0[6].xyzw, r0.xyzw

#line 129
ret 
// Approximately 103 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float4 Position_id14;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float4 Position_id14 : POSITION;
};
struct VS_STREAMS 
{
    float4 Position_id14;
    float4 PositionWS_id15;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float4 Position_id14 : POSITION;
};
struct VS_INPUT 
{
    float4 Position_id14 : POSITION;
};
cbuffer Inputs 
{
    float3 input_717138365_id34;
    float4x4 input_3345405845_id35;
    float2 input_3610066641_id36;
    float input_2690997404_id37;
    float4 input_1184588413_id38;
};
cbuffer PerDraw 
{
    float4x4 World_id24;
    float4x4 WorldInverse_id25;
    float4x4 WorldInverseTranspose_id26;
    float4x4 WorldView_id27;
    float4x4 WorldViewInverse_id28;
    float4x4 WorldViewProjection_id29;
    float3 WorldScale_id30;
    float4 EyeMS_id31;
};
cbuffer PerView 
{
    float4x4 View_id17;
    float4x4 ViewInverse_id18;
    float4x4 Projection_id19;
    float4x4 ProjectionInverse_id20;
    float4x4 ViewProjection_id21;
    float2 ProjScreenRay_id22;
    float4 Eye_id23;
};
Texture2D TextureInput_1006085757_id32;
SamplerState SamplerInput_3294123428_id33;
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.Position_id14 = __input__.Position_id14;
    float3 PositionXyz_783922240 = streams.Position_id14.xyz;
    float3 result_863451576 = (PositionXyz_783922240 + input_717138365_id34);
    float resultZ_1691566330 = result_863451576.z;
    float resultX_1749867069 = result_863451576.x;
    float atan2_2468475509 = atan2(resultZ_1691566330, resultX_1749867069);
    float result_1332623241 = (atan2_2468475509 / 6.2831855);
    float result_250864626 = (result_1332623241 + 1);
    float frac_3503166894 = frac(result_250864626);
    float resultY_214523862 = result_863451576.y;
    float length_1270879381 = length(result_863451576);
    float result_789176160 = (resultY_214523862 / length_1270879381);
    float asin_1432625580 = asin(result_789176160);
    float result_873632312 = (asin_1432625580 + 1.5707964);
    float result_2123059870 = (result_873632312 / 3.1415927);
    float2 float2Join_4053091523 = float2(frac_3503166894, result_2123059870);
    float float2JoinX_352091003 = float2Join_4053091523.x;
    float result_1751919341 = (float2JoinX_352091003 + 0.5);
    float frac_3011594453 = frac(result_1751919341);
    float float2JoinY_78972413 = float2Join_4053091523.y;
    float result_155667802 = (1 - float2JoinY_78972413);
    float2 float2Join_4093325463 = float2(frac_3011594453, result_155667802);
    float float2JoinX_638808954 = float2Join_4093325463.x;
    float result_1666911735 = (float2JoinX_638808954 * 6.2831855);
    float cos_3540654414 = cos(result_1666911735);
    float float2JoinY_3805918382 = float2Join_4093325463.y;
    float result_675572089 = (float2JoinY_3805918382 * 3.1415927);
    float result_1364057265 = (result_675572089 - 1.5707964);
    float cos_1972423666 = cos(result_1364057265);
    float result_3294812938 = (cos_3540654414 * cos_1972423666);
    float sin_2037584111 = sin(result_1364057265);
    float sin_1570135168 = sin(result_1666911735);
    float result_532869800 = (cos_1972423666 * sin_1570135168);
    float3 Float3Join_4154142056 = float3(result_3294812938, sin_2037584111, result_532869800);
    float4 join_1755588273 = float4(Float3Join_4154142056, 1);
    float4 mul_2886624532 = mul(join_1755588273, input_3345405845_id35);
    float3 mulXyz_4174570847 = mul_2886624532.xyz;
    float mulXyzZ_1407726967 = mulXyz_4174570847.z;
    float mulXyzX_3004276246 = mulXyz_4174570847.x;
    float atan2_964478592 = atan2(mulXyzZ_1407726967, mulXyzX_3004276246);
    float result_3903161712 = (atan2_964478592 / 6.2831855);
    float result_1437333991 = (result_3903161712 + 1);
    float frac_4161593135 = frac(result_1437333991);
    float mulXyzY_978680907 = mulXyz_4174570847.y;
    float length_3970842514 = length(mulXyz_4174570847);
    float result_3169758639 = (mulXyzY_978680907 / length_3970842514);
    float asin_4110235749 = asin(result_3169758639);
    float result_1174355717 = (asin_4110235749 + 1.5707964);
    float result_1620035583 = (result_1174355717 / 3.1415927);
    float2 float2Join_162709978 = float2(frac_4161593135, result_1620035583);
    float2 result_1931394049 = (float2Join_162709978 - float2(0.375, 0.25));
    float2 result_24255276 = (float2(0.625, 0.75) - float2(0.375, 0.25));
    float2 result_3594784760 = (result_1931394049 / result_24255276);
    float2 result_1718617402 = (result_3594784760 * float2(2, 2));
    float2 result_381279544 = (result_1718617402 - float2(1, 1));
    float2 result_2194720680 = (result_381279544 / input_3610066641_id36);
    float2 result_2760243920 = (result_2194720680 + float2(1, 1));
    float2 result_3097218498 = (result_2760243920 * float2(0.5, 0.5));
    float4 textureNode_2641225958 = TextureInput_1006085757_id32.Sample(SamplerInput_3294123428_id33, result_3097218498);
    float textureNodeW_642424508 = textureNode_2641225958.w;
    bool Assign_772615077 = textureNodeW_642424508 == input_2690997404_id37;
    float4 expression_1266455811 = Assign_772615077 ? input_1184588413_id38 : textureNode_2641225958;
    streams.ColorTarget_id2 = expression_1266455811;
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id14 = __input__.Position_id14;
    streams.PositionWS_id15 = streams.Position_id14;
    float4 mul_277697853 = mul(streams.Position_id14, WorldViewProjection_id29);
    streams.ShadingPosition_id0 = mul_277697853;
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.Position_id14 = streams.Position_id14;
    return __output__;
}
